package com.brilliance.netsign;import com.alibaba.fastjson.JSON;import com.brilliance.netsign.model.RequestGenP10Model;import com.brilliance.netsign.result.Result;import com.brilliance.netsign.utils.RestTemplateTools;import com.fasterxml.jackson.core.JsonProcessingException;import com.fasterxml.jackson.databind.ObjectMapper;import org.junit.Test;import org.springframework.http.HttpEntity;import org.springframework.http.HttpHeaders;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.web.client.RestTemplate;/** * @Author: WeiBingtao/13156050650@163.com * @Version: 1.0 * @Description: * @Date: 2021/2/4 0004 21:52 */public class Test1 {    @Test    public void TestGenP10(){        RestTemplate restTemplate = RestTemplateTools.restTemplate(null);        HttpHeaders headers = new HttpHeaders();        headers.setContentType(MediaType.APPLICATION_JSON);        ObjectMapper mapper = new ObjectMapper();        RequestGenP10Model requestGenP10Model = new RequestGenP10Model();        requestGenP10Model.setKeyLabel("testBGroup");        requestGenP10Model.setCover(false);        requestGenP10Model.setCertDN("testBGroup");        String string = null;        try {            string = mapper.writeValueAsString(requestGenP10Model);        } catch (JsonProcessingException e) {            e.printStackTrace();        }        HttpEntity<String> entity = new HttpEntity<String>(string, headers);        ResponseEntity<Result> resultResponseEntity = restTemplate.postForEntity("http://47.95.204" +                ".66:34997/brilliance/netsign/genP10",entity, Result.class);        System.out.println(JSON.toJSONString(resultResponseEntity.getBody()));    }    @Test    public void Test1(){        String str = "313939363539373433363038353932363036383037363236323835353139363531353436313738";        char[] chars = str.toCharArray();        StringBuilder stringBuilder = new StringBuilder();        for (int i = 1; i <chars.length ; i++) {            stringBuilder.append(chars[i]);            i++;        }        System.out.println(stringBuilder.toString());    }}