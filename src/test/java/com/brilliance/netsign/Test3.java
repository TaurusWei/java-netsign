package com.brilliance.netsign;import org.bouncycastle.asn1.ASN1InputStream;import org.bouncycastle.asn1.ASN1Primitive;import org.bouncycastle.asn1.ASN1Sequence;import org.bouncycastle.asn1.x509.X509CertificateStructure;import org.junit.Test;import org.springframework.util.Base64Utils;import java.io.ByteArrayInputStream;import java.io.InputStream;import java.text.DecimalFormat;/** * @Author: WeiBingtao/13156050650@163.com * @Version: 1.0 * @Description: * @Date: 2020/12/21 0021 15:33 */public class Test3 {    @Test    public void testParseCertificate(){        String caCert= "MIICIzCCAcmgAwIBAgIQEeuJgzyQ1K19ZAUKALWsNTAKBggqgRzPVQGDdTBWMQsw" +                "CQYDVQQGEwJDTjEQMA4GA1UECBMHQmVpSmluZzEQMA4GA1UEBxMHQmVpSmluZzEP" + "MA0GA1UEChMGYWEubnBjMRIwEAYDVQQDEwljYS5hYS5ucGMwHhcNMjAxMjA3MTEy" + "NjU1WhcNMzAxMjA1MTEyNjU1WjBIMQswCQYDVQQGEwJDTjEQMA4GA1UECBMHQmVp" + "SmluZzEQMA4GA1UEBxMHQmVpSmluZzEVMBMGA1UEAxMMcGVlcjEubnBjLWFhMFkw" + "EwYHKoZIzj0CAQYIKoEcz1UBgi0DQgAEa4QJR9bSp/vNr9sKIvmIcMuNoqlXYflM" + "fG80FSyRR5ZOiLtlck3WTlTOui7hQYH6tDmktPsk/ZSAebkIIkyte6OBhjCBgzAO" + "BgNVHQ8BAf8EBAMCB4AwDAYDVR0TAQH/BAIwADAwBgNVHQ4EKQQnMjA5Mzc2NTA2" + "MTc5MjU3MTI1NjcwMzkzMDEzMDI2NzE5NDc2ODkzMDEGA1UdIwQqMCiAJjE1MzIx" + "NDQ1MDA4NzA3NzkxODcwNTI0MjE3NjI4NjAxNzk0NjgwMAoGCCqBHM9VAYN1A0gA" + "MEUCIQCM/3PbSLvqfqw8Kd29z4zRwYzYAk2/ggSo/vCE/3O7owIgeqJ9LFzLD+BN" + "yLaowbGrxn7jCakEEb9rUDevLpm79eo=" ;        InputStream inStream = new ByteArrayInputStream(Base64Utils.decodeFromString(caCert));        ASN1Sequence seq = null;        ASN1InputStream aIn;        try        {            aIn = new ASN1InputStream(inStream);            seq = (ASN1Sequence)aIn.readObject();            X509CertificateStructure cert = new X509CertificateStructure(seq);            System.out.println(cert.getSubject().toString().split("CN=")[1]);        }        catch (Exception e) {            // TODO Auto-generated catch block            e.printStackTrace();        }        String beginTime = System.currentTimeMillis()/1000+"";        System.out.println(beginTime);        int a = 9;        int b = 2;        System.out.println((float)a/b);        System.out.println(a/(float)b);        System.out.println((float)a/(float)b);        DecimalFormat df = new DecimalFormat("0.00");        String s = df.format((float)a/b);        System.out.println(s);    }}